name: "Build"

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    branches: [main]
  pull_request:
    branches: [main]
      
env:
  SOLUTION_FILE_PATH: .
  DEFAULT_BRANCH: main
  
jobs:
  build:
    outputs:
      version: ${{ steps.vsix_version.outputs.version-number }}
    name: Build 
    runs-on: windows-latest
    env:
      Configuration: Release
      DeployExtension: False
      VsixManifestPath: .\VsEditorSplitter\source.extension.vsixmanifest
      VsixManifestSourcePath: .\VsEditorSplitter\source.extension.cs
      
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET build dependencies
      uses: timheuer/bootstrap-dotnet@v1
      with:
        nuget: 'false'
        sdk: 'false'
        msbuild: 'true'
        
    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

#     - name: Increment VSIX version
#       id: vsix_version
#       uses: timheuer/vsix-version-stamp@v1
#       with:
#         manifest-file: ${{ env.VsixManifestPath }}
#         vsix-token-source-file: ${{ env.VsixManifestSourcePath }}

    - name: Build
      run: msbuild ${{env.SOLUTION_FILE_PATH}} /p:configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal /v:m   

#     - name: Publish extension to Marketplace
#       uses: cezarypiatek/VsixPublisherAction@0.1
#       with:
#         extension-file: '.\VsEditorSplitter\bin\Release\VsEditorSplitter.vsix'
#         publish-manifest-file: 'vs-publish.json'
#         personal-access-code: ${{ secrets.VS_PUBLISHER_ACCESS_TOKEN }}'
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: .\VsEditorSplitter\bin\Release\VsEditorSplitter.vsix
        asset_name: VsEditorSplitter.vsix
        asset_content_type: application/zip
